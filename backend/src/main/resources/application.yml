server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: ai-face-detection-api
  
  datasource:
    url: jdbc:mysql://localhost:3306/isthispersonreal?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    open-in-view: false
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-here-make-it-long-and-secure-in-production}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

# OpenAI Configuration
openai:
  api-key: ${OPENAI_API_KEY:}
  model: gpt-3.5-turbo
  max-tokens: 1000
  temperature: 0.7

# Python ML Service Configuration
ml-service:
  url: ${ML_SERVICE_URL:http://localhost:8000}
  timeout: 30000

# GraphQL Configuration
graphql:
  servlet:
    mapping: /graphql
    enabled: true
    corsEnabled: true
  tools:
    schema-location-pattern: "**/*.graphqls"
  graphiql:
    enabled: true
    path: /graphiql

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

# Logging Configuration
logging:
  level:
    com.isthispersonreal.api: INFO
    org.springframework.security: DEBUG
    org.springframework.graphql: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Async Configuration
async:
  core-pool-size: 10
  max-pool-size: 20
  queue-capacity: 100
  thread-name-prefix: async-queue- 